name: AI Status Monitor - Bot Status Update

on:
  schedule:
    - cron: "*/5 * * * *"   # 5분마다 (UTC 기준)
  workflow_dispatch:        # 수동 실행도 가능

jobs:
  poll-and-update:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

        # jq 설치 (ubuntu-latest에 기본 탑재되어 있지만 보수적으로 설치)
      - name: Ensure jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Fetch OpenAI Status (Chat component)
        id: fetch
        run: |
          set -euo pipefail
          URL="https://status.openai.com/api/v2/summary.json"
          JSON="$(curl -fsSL "$URL")"
          
          # Chat 컴포넌트 상태 추출 (ChatGPT 대신 Chat 사용)
          STATUS="$(echo "$JSON" | jq -r '.components[] | select(.name|test("Chat";"i")) | .status' || true)"
          if [ -z "$STATUS" ] || [ "$STATUS" = "null" ]; then
            # Chat 컴포넌트를 찾을 수 없으면 전체 상태 사용
            OVERALL_STATUS="$(echo "$JSON" | jq -r '.status.indicator' || true)"
            case "$OVERALL_STATUS" in
              "none") STATUS="operational" ;;
              "minor") STATUS="degraded_performance" ;;
              "major") STATUS="major_outage" ;;
              *) STATUS="unknown" ;;
            esac
          fi
          
          # 상태 정리 (첫 번째 줄만 사용)
          STATUS=$(echo "$STATUS" | head -n1 | tr -d '\n\r')
          
          echo "Found status: '$STATUS'"
          
          # GitHub Actions output (간단한 형식)
          echo "status=$STATUS" >> "$GITHUB_OUTPUT"

      - name: Update bot display name and status
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        run: |
          set -euo pipefail
          
          # Slack 토큰 확인
          if [ -z "${SLACK_BOT_TOKEN:-}" ]; then
            echo "ERROR: SLACK_BOT_TOKEN is not set!"
            echo "Please add SLACK_BOT_TOKEN to repository secrets."
            exit 1
          fi
          
          # 현재 상태 가져오기
          CURRENT_STATUS="${{ steps.fetch.outputs.status }}"
          echo "Current status: '$CURRENT_STATUS'"
          
          # 상태에 따른 봇 이름과 이모지 설정
          case "$CURRENT_STATUS" in
            operational) 
              BOT_NAME="AI Monitor 🟢"
              STATUS_EMOJI=":white_check_mark:"
              STATUS_TEXT="OpenAI 정상 작동 중"
              ;;
            degraded_performance) 
              BOT_NAME="AI Monitor 🟡"
              STATUS_EMOJI=":warning:"
              STATUS_TEXT="OpenAI 성능 저하"
              ;;
            partial_outage|major_outage) 
              BOT_NAME="AI Monitor 🔴"
              STATUS_EMOJI=":x:"
              STATUS_TEXT="OpenAI 장애 발생"
              ;;
            *) 
              BOT_NAME="AI Monitor ⚠️"
              STATUS_EMOJI=":question:"
              STATUS_TEXT="OpenAI 상태 불명 ($CURRENT_STATUS)"
              ;;
          esac
          
          echo "=== DEBUG INFO ==="
          echo "Bot Name: $BOT_NAME"
          echo "Status: $CURRENT_STATUS"
          echo "Status Text: $STATUS_TEXT"
          echo "Status Emoji: $STATUS_EMOJI"
          echo "Token present: $([ -n "${SLACK_BOT_TOKEN:-}" ] && echo "YES" || echo "NO")"
          echo "Token length: ${#SLACK_BOT_TOKEN}"
          echo "=================="
          
          # JSON 페이로드 생성 (특수문자 안전 처리)
          DISPLAY_NAME_PAYLOAD=$(jq -n --arg name "$BOT_NAME" '{profile: {display_name: $name}}')
          STATUS_PAYLOAD=$(jq -n --arg emoji "$STATUS_EMOJI" --arg text "$STATUS_TEXT" '{profile: {status_emoji: $emoji, status_text: $text}}')
          
          # 먼저 봇 정보 확인
          echo "Testing Slack API connection..."
          AUTH_TEST=$(curl -sS \
            -H "Authorization: Bearer ${SLACK_BOT_TOKEN}" \
            "https://slack.com/api/auth.test")
          
          echo "Auth test response: $AUTH_TEST"
          
          if echo "$AUTH_TEST" | jq -e '.ok == false' > /dev/null; then
            echo "ERROR: Slack authentication failed"
            echo "$AUTH_TEST" | jq -r '.error // "Unknown error"'
            exit 1
          fi
          
          # 봇의 display name 업데이트
          echo "Updating display name..."
          RESPONSE1=$(curl -sS -X POST \
            -H "Authorization: Bearer ${SLACK_BOT_TOKEN}" \
            -H "Content-type: application/json; charset=utf-8" \
            --data "$DISPLAY_NAME_PAYLOAD" \
            "https://slack.com/api/users.profile.set")
          
          echo "Display name response: $RESPONSE1"
          
          # 봇의 상태 메시지 업데이트
          echo "Updating status message..."
          RESPONSE2=$(curl -sS -X POST \
            -H "Authorization: Bearer ${SLACK_BOT_TOKEN}" \
            -H "Content-type: application/json; charset=utf-8" \
            --data "$STATUS_PAYLOAD" \
            "https://slack.com/api/users.profile.set")
          
          echo "Status message response: $RESPONSE2"
          
          # 에러 체크
          if echo "$RESPONSE1" | jq -e '.ok == false' > /dev/null; then
            echo "ERROR: Display name update failed"
            echo "$RESPONSE1" | jq -r '.error // "Unknown error"'
          fi
          
          if echo "$RESPONSE2" | jq -e '.ok == false' > /dev/null; then
            echo "ERROR: Status message update failed"
            echo "$RESPONSE2" | jq -r '.error // "Unknown error"'
          fi
