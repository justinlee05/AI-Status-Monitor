name: AI Status Monitor - Bot Status Update

on:
  schedule:
    - cron: "*/5 * * * *"   # 5분마다 (UTC 기준)
  workflow_dispatch:        # 수동 실행도 가능

jobs:
  poll-and-update:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

        # jq 설치 (ubuntu-latest에 기본 탑재되어 있지만 보수적으로 설치)
      - name: Ensure jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Fetch OpenAI Status (Chat component)
        id: fetch
        run: |
          set -euo pipefail
          URL="https://status.openai.com/api/v2/summary.json"
          JSON="$(curl -fsSL "$URL")"
          
          # Chat 컴포넌트 상태 추출 (ChatGPT 대신 Chat 사용)
          STATUS="$(echo "$JSON" | jq -r '.components[] | select(.name|test("Chat";"i")) | .status' || true)"
          if [ -z "$STATUS" ] || [ "$STATUS" = "null" ]; then
            # Chat 컴포넌트를 찾을 수 없으면 전체 상태 사용
            OVERALL_STATUS="$(echo "$JSON" | jq -r '.status.indicator' || true)"
            case "$OVERALL_STATUS" in
              "none") STATUS="operational" ;;
              "minor") STATUS="degraded_performance" ;;
              "major") STATUS="major_outage" ;;
              *) STATUS="unknown" ;;
            esac
          fi
          
          # 상태 정리 (첫 번째 줄만 사용)
          STATUS=$(echo "$STATUS" | head -n1 | tr -d '\n\r')
          
          echo "Found status: '$STATUS'"
          
          # GitHub Actions output (간단한 형식)
          echo "status=$STATUS" >> "$GITHUB_OUTPUT"

      - name: Update bot status
        env:
          SLACK_USER_TOKEN: ${{ secrets.SLACK_USER_TOKEN }}
        run: |
          set -euo pipefail
          
          # Slack 사용자 토큰 확인 (봇 상태 변경용)
          if [ -z "${SLACK_USER_TOKEN:-}" ]; then
            echo "ERROR: SLACK_USER_TOKEN is not set!"
            echo "Need user token (xoxp-) to update bot status"
            exit 1
          fi
          
          # 현재 상태 가져오기
          CURRENT_STATUS="${{ steps.fetch.outputs.status }}"
          echo "Current status: '$CURRENT_STATUS'"
          
          # 상태에 따른 봇 상태 설정
          case "$CURRENT_STATUS" in
            operational) 
              STATUS_EMOJI=":white_check_mark:"
              STATUS_TEXT="OpenAI 정상 작동 중"
              ;;
            degraded_performance) 
              STATUS_EMOJI=":warning:"
              STATUS_TEXT="OpenAI 성능 저하"
              ;;
            partial_outage|major_outage) 
              STATUS_EMOJI=":x:"
              STATUS_TEXT="OpenAI 장애 발생"
              ;;
            *) 
              STATUS_EMOJI=":question:"
              STATUS_TEXT="OpenAI 상태 불명 ($CURRENT_STATUS)"
              ;;
          esac
          
          echo "=== DEBUG INFO ==="
          echo "Status: $CURRENT_STATUS"
          echo "Status Text: $STATUS_TEXT"
          echo "Status Emoji: $STATUS_EMOJI"
          echo "=================="
          
          # 먼저 봇의 사용자 ID 가져오기
          echo "Getting bot user info..."
          BOT_INFO=$(curl -sS \
            -H "Authorization: Bearer ${SLACK_USER_TOKEN}" \
            "https://slack.com/api/auth.test")
          
          echo "Bot info: $BOT_INFO"
          
          if echo "$BOT_INFO" | jq -e '.ok == false' > /dev/null; then
            echo "ERROR: Failed to get bot info"
            echo "$BOT_INFO" | jq -r '.error // "Unknown error"'
            exit 1
          fi
          
          BOT_USER_ID=$(echo "$BOT_INFO" | jq -r '.user_id')
          echo "Bot User ID: $BOT_USER_ID"
          
          # 봇의 상태 메시지 업데이트
          echo "Updating bot status..."
          STATUS_PAYLOAD=$(jq -n \
            --arg user "$BOT_USER_ID" \
            --arg emoji "$STATUS_EMOJI" \
            --arg text "$STATUS_TEXT" \
            '{
              user: $user,
              profile: {
                status_emoji: $emoji,
                status_text: $text
              }
            }')
          
          RESPONSE=$(curl -sS -X POST \
            -H "Authorization: Bearer ${SLACK_USER_TOKEN}" \
            -H "Content-type: application/json; charset=utf-8" \
            --data "$STATUS_PAYLOAD" \
            "https://slack.com/api/users.profile.set")
          
          echo "Response: $RESPONSE"
          
          # 에러 체크
          if echo "$RESPONSE" | jq -e '.ok == false' > /dev/null; then
            echo "ERROR: Bot status update failed"
            echo "$RESPONSE" | jq -r '.error // "Unknown error"'
            exit 1
          else
            echo "✅ Bot status updated successfully!"
            echo "Status: $STATUS_EMOJI $STATUS_TEXT"
          fi
