name: ChatGPT Status to Slack Icon

on:
  schedule:
    - cron: "*/5 * * * *"   # 5분마다 (UTC 기준)
  workflow_dispatch:        # 수동 실행도 가능

jobs:
  poll-and-update:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (icons only)
        uses: actions/checkout@v4

        # jq 설치 (ubuntu-latest에 기본 탑재되어 있지만 보수적으로 설치)
      - name: Ensure jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Fetch OpenAI Status (ChatGPT component)
        id: fetch
        run: |
          set -euo pipefail
          URL="https://status.openai.com/api/v2/summary.json"
          JSON="$(curl -fsSL "$URL")"
          # ChatGPT 컴포넌트 상태만 추출(없으면 빈 문자열)
          STATUS="$(echo "$JSON" | jq -r '.components[] | select(.name|test("ChatGPT";"i")) | .status' || true)"
          if [ -z "$STATUS" ] || [ "$STATUS" = "null" ]; then
            # 컴포넌트 명이 변할 가능성에 대비: API 전체 지표(보수적 Yellow) 사용
            STATUS="unknown"
          fi
          echo "status=$STATUS" >> "$GITHUB_OUTPUT"

      - name: Decide icon color
        id: color
        run: |
          set -euo pipefail
          case "${{ steps.fetch.outputs.status }}" in
            operational) COLOR="green" ;;
            degraded_performance) COLOR="yellow" ;;
            partial_outage|major_outage) COLOR="red" ;;
            *) COLOR="yellow" ;;  # unknown/maintenance 등은 경고색으로
          esac
          echo "color=$COLOR" >> "$GITHUB_OUTPUT"

      - name: Set Slack profile photo (users.setPhoto)
        env:
          SLACK_USER_TOKEN: ${{ secrets.SLACK_USER_TOKEN }}
        run: |
          set -euo pipefail
          ICON="icons/${{ steps.color.outputs.color }}.png"
          if [ ! -f "$ICON" ]; then
            echo "Icon not found: $ICON" >&2
            exit 1
          fi
          # Slack Web API: users.setPhoto (multipart)
          curl -sS -F "image=@${ICON}" \
               -H "Authorization: Bearer ${SLACK_USER_TOKEN}" \
               https://slack.com/api/users.setPhoto \
            | jq -r '.'

      # 선택: 상태 변경시 채널 알림 (봇 토큰 필요)
      # - name: Notify channel
      #   if: always()
      #   env:
      #     SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      #   run: |
      #     CHANNEL="#ai-status"  # 채널 ID나 이름
      #     TEXT="ChatGPT 상태 아이콘 갱신: ${{ steps.color.outputs.color == 'green' && '🟢 정상' || steps.color.outputs.color == 'yellow' && '🟡 경미 이슈/미확인' || '🔴 장애' }}"
      #     curl -sS -X POST "https://slack.com/api/chat.postMessage" \
      #       -H "Authorization: Bearer ${SLACK_BOT_TOKEN}" \
      #       -H "Content-type: application/json; charset=utf-8" \
      #       --data "{\"channel\":\"${CHANNEL}\",\"text\":\"${TEXT}\"}" \
      #     | jq -r '.'
